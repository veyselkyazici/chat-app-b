
name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      changed: ${{ steps.filter.outputs.changed }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: '2'

      - name: Detect changed services
        id: filter
        run: |
          changed=$(git diff --name-only HEAD^ HEAD | cut -d/ -f1 | sort -u)
            
          services=""
          for dir in $changed; do
            dir=$(echo "$dir" | xargs)
            case $dir in
              eureka-server|config-server|auth-service|user-service|contacts-service|chat-service|mail-service|api-gateway-service)
                services="$services $dir"
                ;;
            esac
          done
            
          services=$(echo "$services" | xargs)
            
          # Eğer ana build.gradle değiştiyse -> tüm servisler deploy edilsin
          if echo "$changed" | grep -q "build.gradle"; then
            services="eureka-server config-server auth-service user-service contacts-service chat-service mail-service api-gateway-service"
          fi
            
          echo "Changed services: $services"
            
          # JSON array formatına çevir
          json_services=$(echo $services | jq -R -s -c 'split(" ")')
          echo "changed=$json_services" >> $GITHUB_OUTPUT

  build-and-push:
    needs: detect-changes
    if: needs.detect-changes.outputs.changed != '[]'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: ${{ fromJSON(needs.detect-changes.outputs.changed) }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build Docker image
        run: docker build . --build-arg SERVICE=${{ matrix.service }} -t ${{ secrets.DOCKER_HUB_USERNAME }}/microservices:${{ matrix.service }}

      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/microservices:${{ matrix.service }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to VPS
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_PORT }}
          script: |
            cd /home/vky/vkychatapp
            changed='${{ needs.detect-changes.outputs.changed }}'
              
            for service in $(echo $changed | jq -r '.[]'); do
              echo "Deploying $service ..."
              case $service in
                api-gateway-service) compose_service="api-gateway" ;;
                *) compose_service=$service ;;
              esac
              
              docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/microservices:$service
              docker-compose -f docker-compose.yml up -d $compose_service
            done

