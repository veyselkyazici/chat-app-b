# config-server/src/main/resources/config/mail-service-prod.yml

server:
  port: ${SERVER_PORT}
  shutdown: graceful

spring:
  mvc:
    log-request-details: true
  lifecycle:
    timeout-per-shutdown-phase: 30s
#  cloud:
#    openfeign:
#      clients:
#        auth-service:
#          url: ${AUTH_SERVICE_URL}

  datasource:
    url: jdbc:postgresql://${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_NAME}
    username: ${POSTGRES_USERNAME}
    password: ${POSTGRES_PASSWORD}

  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      password: ${REDIS_PASSWORD}

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        format_sql: false

  mail:
    host: ${MAIL_HOST}
    port: ${MAIL_PORT}
    username: ${MAIL_ID}
    password: ${MAIL_PASSWORD}
    verify:
      host: ${MAIL_VERIFY_HOST}
    protocol: smtp
    properties:
      mail:
        transport.protocol: smtps
        smtp:
          auth: true
          ssl:
            enable: true
          starttls:
            enable: false
        connectiontimeout: 10000
        timeout: 10000
        writetimeout: 10000


services:
  url:
    auth: ${AUTH_SERVICE_URL}
    mail: ${MAIL_SERVICE_URL}
    user: ${USER_SERVICE_URL}
    contacts: ${CONTACTS_SERVICE_URL}
    chat: ${CHAT_SERVICE_URL}



eureka:
  client:
    serviceUrl:
      defaultZone: ${EUREKA_SERVER}
    registryFetchIntervalSeconds: 30
    connectTimeoutSeconds: 5
    retryable: true
  instance:
    instance-id: ${spring.application.name}:${server.port}
    leaseRenewalIntervalInSeconds: 10
    leaseExpirationDurationInSeconds: 30

logging:
  level:
    root: INFO
    com.vky: INFO
    org.springframework.web: INFO
    org.hibernate.SQL: WARN
    org.springframework.data.redis: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} %-5level - %msg%n"


management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus
    prometheus:
      enabled: true
