# config-server/src/main/resources/config/user-service-dev.yml
server:
  port: ${SERVER_PORT:9010}

spring:
  rabbitmq:
    host: ${RABBITMQ_HOST:localhost}
    port: ${RABBITMQ_PORT:5672}
    username: ${RABBITMQ_USERNAME:veysel}
    password: ${RABBITMQ_PASSWORD:123}

  cloud:
    openfeign:
      clients:
        auth-service:
          url: ${AUTH_SERVICE_URL:http://localhost:9000}
        mail-service:
          url: ${MAIL_SERVICE_URL:http://localhost:9020}
        contacts-service:
          url: ${CONTACTS_SERVICE_URL:http://localhost:9030}
        chat-service:
          url: ${CHAT_SERVICE_URL:http://localhost:9040}

  datasource:
    url: jdbc:postgresql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:5432}/${POSTGRES_NAME:chat_app_dev}
    username: ${POSTGRES_USERNAME:postgres}
    password: ${POSTGRES_PASSWORD:12345}
#    hikari:
#      maximum-pool-size: ${DB_POOL_SIZE:10}
#      connection-timeout: ${DB_CONNECTION_TIMEOUT:20000}
#      idle-timeout: ${DB_IDLE_TIMEOUT:300000}

  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
#      password: ${REDIS_PASSWORD:}
#      timeout: ${REDIS_TIMEOUT:2000ms}

  # Development specific settings
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true

eureka:
  client:
    serviceUrl:
      defaultZone: ${EUREKA_SERVER:http://localhost:8761/eureka/}
    registryFetchIntervalSeconds: 30
    connectTimeoutSeconds: 5
    retryable: true
  instance:
    instance-id: ${spring.application.name}:${server.port}
    leaseRenewalIntervalInSeconds: 10
    leaseExpirationDurationInSeconds: 30

cloudinary:
  cloud:
    name: ${CLOUDINARY_CLOUD_NAME}
  api:
    key: ${CLOUDINARY_API_KEY}
    secret: ${CLOUDINARY_API_SECRET}

services:
  url:
    auth: ${AUTH_SERVICE_URL:http://auth-service:9000/api/v1/auth}
    mail: ${MAIL_SERVICE_URL:http://mail-service:9020/api/v1/mail}
    user: ${USER_SERVICE_URL:http://user-service:9010/api/v1/user}
    contacts: ${CONTACTS_SERVICE_URL:http://contacts-service:9030/api/v1/contacts}
    chat: ${CHAT_SERVICE_URL:http://chat-service:9040/api/v1/chat}

# Development logging
logging:
  level:
    com.vky: DEBUG

# Development actuator endpoints
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always