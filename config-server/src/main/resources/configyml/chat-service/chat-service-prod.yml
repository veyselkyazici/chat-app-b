# config-server/src/main/resources/config/chat-service-prod.yml
server:
  port: ${SERVER_PORT}
  shutdown: graceful

spring:
  lifecycle:
    timeout-per-shutdown-phase: 30s
  # MongoDB Production Configuration
  data:
    mongodb:
      username: ${MONGODB_USERNAME}
      password: ${MONGODB_PASSWORD}
      host: ${MONGODB_HOST}
      port: ${MONGODB_PORT}
      database: ${MONGODB_DB}
      authentication-database: ${MONGODB_AUTH_DB}
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      password: ${REDIS_PASSWORD}
      # Production connection pooling
#      options:
#        min-connections-per-host: ${MONGODB_MIN_CONNECTIONS:20}
#        connections-per-host: ${MONGODB_MAX_CONNECTIONS:200}
#        server-selection-timeout: ${MONGODB_SERVER_SELECTION_TIMEOUT:30000}
#        connect-timeout: ${MONGODB_CONNECT_TIMEOUT:10000}
#        socket-timeout: ${MONGODB_SOCKET_TIMEOUT:0}
#        max-wait-time: ${MONGODB_MAX_WAIT_TIME:120000}
#        # Replica Set (eğer kullanıyorsanız)
#        replica-set-name: ${MONGODB_REPLICA_SET:}

  rabbitmq:
    host: ${RABBITMQ_HOST}
    port: ${RABBITMQ_PORT}
    username: ${RABBITMQ_USERNAME}
    password: ${RABBITMQ_PASSWORD}
#    connection-timeout: ${RABBITMQ_CONNECTION_TIMEOUT:30000}
#    requested-heartbeat: ${RABBITMQ_HEARTBEAT:30}

#  cloud:
#    openfeign:
#      clients:
#        auth-service:
#          url: ${AUTH_SERVICE_URL}
#        user-service:
#          url: ${USER_SERVICE_URL}
#        contacts-service:
#          url: ${CONTACTS_SERVICE_URL}


#      timeout: ${REDIS_TIMEOUT:3000ms}
#      jedis:
#        pool:
#          max-active: ${REDIS_POOL_MAX_ACTIVE:20} # Chat için daha yüksek
#          max-idle: ${REDIS_POOL_MAX_IDLE:20}
#          min-idle: ${REDIS_POOL_MIN_IDLE:5}

eureka:
  client:
    serviceUrl:
      defaultZone: ${EUREKA_SERVER}
    registryFetchIntervalSeconds: 30
    connectTimeoutSeconds: 5
    retryable: true
  instance:
    instance-id: ${spring.application.name}:${server.port}
    leaseRenewalIntervalInSeconds: 10
    leaseExpirationDurationInSeconds: 30

# Production URLs - Service discovery
services:
  url:
    auth: ${AUTH_SERVICE_URL}
    mail: ${MAIL_SERVICE_URL}
    user: ${USER_SERVICE_URL}
    contacts: ${CONTACTS_SERVICE_URL}
    chat: ${CHAT_SERVICE_URL}

# JWT Security Configuration - Production
application:
  security:
    jwt:
      secret-key: ${JWT_SECRET_KEY}
      expiration: ${JWT_EXPIRATION}
      refresh-token:
        expiration: ${JWT_REFRESH_EXPIRATION}

# Production logging
logging:
  level:
    root: INFO
    com.vky: INFO
    org.springframework.web: INFO
    org.hibernate.SQL: WARN
    org.springframework.data.redis: WARN
    org.springframework.data.mongodb: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} %-5level - %msg%n"


# WebSocket production configuration
#websocket:
#  allowed-origins: ${WEBSOCKET_ALLOWED_ORIGINS:https://yourdomain.com,https://www.yourdomain.com}
#  heartbeat:
#    interval: ${WEBSOCKET_HEARTBEAT_INTERVAL:30000}
#    timeout: ${WEBSOCKET_HEARTBEAT_TIMEOUT:120000}


management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus
    prometheus:
      enabled: true
